What happens when you initialize a repository? Why do you need to do it?

There will appear a .git file in it. Because only by doing so we can 
make an ordinary directory a repository, which can further track the 
files in it.



How is the staging area different from the working directory and the 
repository? What value do you think it offers?

Staging area is an intermediate between working directory and 
repository. Files can be added from working directory to the staging 
area, and then be be committed. With the presence of staging area we 
could choose what files in the directory to be finally committed.




How can you use the staging area to make sure you have one commit per 
logical change?

We can use command git diff with no argument to see what changes we made on the files in working directory, which is the difference between staging area and working directory. Once we make sure that we did a logical change as expected, we can add this change to staging area then commmit it to repository (we can also see the differentce between staging area and repository by command git diff --staged).



What are some situations when branches would be helpful in keeping your 
history organized? How would branches help?




How do the diagrams help you visualize the branch structure?




What is the result of merging two branches together? Why do we represent 
it in the diagram the way we do?




What are the pros and cons of Git's automatic merging vs. always doing 
merges manually?
